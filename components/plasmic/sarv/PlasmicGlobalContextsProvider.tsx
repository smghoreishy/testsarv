// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: aUZyoBv2znBVirsF7auAUJ

import * as React from "react";
import { hasVariant, ensureGlobalVariants } from "@plasmicapp/react-web";
import { AntdConfigProvider } from "@plasmicpkgs/antd5/skinny/registerConfigProvider"; // plasmic-import: DmrLLHGTjGTE/codeComponent
import { SanityCredentialsProvider } from "@plasmicpkgs/plasmic-sanity-io"; // plasmic-import: XenoJpDQeDb/codeComponent
import { EmbedCss } from "@plasmicpkgs/plasmic-embed-css"; // plasmic-import: qF0uJxFztB/codeComponent

export interface GlobalContextsProviderProps {
  children?: React.ReactElement;
  antdConfigProviderProps?: Partial<
    Omit<React.ComponentProps<typeof AntdConfigProvider>, "children">
  >;
  sanityCredentialsProviderProps?: Partial<
    Omit<React.ComponentProps<typeof SanityCredentialsProvider>, "children">
  >;
  embedCssProps?: Partial<
    Omit<React.ComponentProps<typeof EmbedCss>, "children">
  >;
}

export default function GlobalContextsProvider(
  props: GlobalContextsProviderProps
) {
  const {
    children,
    antdConfigProviderProps,
    sanityCredentialsProviderProps,
    embedCssProps
  } = props;

  return (
    <AntdConfigProvider
      {...antdConfigProviderProps}
      borderRadius={
        antdConfigProviderProps && "borderRadius" in antdConfigProviderProps
          ? antdConfigProviderProps.borderRadius!
          : 6
      }
      colorBgBase={
        antdConfigProviderProps && "colorBgBase" in antdConfigProviderProps
          ? antdConfigProviderProps.colorBgBase!
          : "#ffffff"
      }
      colorError={
        antdConfigProviderProps && "colorError" in antdConfigProviderProps
          ? antdConfigProviderProps.colorError!
          : "#ff4d4f"
      }
      colorInfo={
        antdConfigProviderProps && "colorInfo" in antdConfigProviderProps
          ? antdConfigProviderProps.colorInfo!
          : true
          ? "#00A693"
          : undefined
      }
      colorPrimary={
        antdConfigProviderProps && "colorPrimary" in antdConfigProviderProps
          ? antdConfigProviderProps.colorPrimary!
          : true
          ? "#00A693"
          : undefined
      }
      colorSuccess={
        antdConfigProviderProps && "colorSuccess" in antdConfigProviderProps
          ? antdConfigProviderProps.colorSuccess!
          : "#52c41a"
      }
      colorWarning={
        antdConfigProviderProps && "colorWarning" in antdConfigProviderProps
          ? antdConfigProviderProps.colorWarning!
          : "#faad14"
      }
      controlHeight={
        antdConfigProviderProps && "controlHeight" in antdConfigProviderProps
          ? antdConfigProviderProps.controlHeight!
          : 32
      }
      defaultDark={
        antdConfigProviderProps && "defaultDark" in antdConfigProviderProps
          ? antdConfigProviderProps.defaultDark!
          : false
      }
      lineWidth={
        antdConfigProviderProps && "lineWidth" in antdConfigProviderProps
          ? antdConfigProviderProps.lineWidth!
          : 1
      }
      loadingText={
        antdConfigProviderProps && "loadingText" in antdConfigProviderProps
          ? antdConfigProviderProps.loadingText!
          : undefined
      }
      removeLoading={
        antdConfigProviderProps && "removeLoading" in antdConfigProviderProps
          ? antdConfigProviderProps.removeLoading!
          : undefined
      }
      sizeStep={
        antdConfigProviderProps && "sizeStep" in antdConfigProviderProps
          ? antdConfigProviderProps.sizeStep!
          : 4
      }
      sizeUnit={
        antdConfigProviderProps && "sizeUnit" in antdConfigProviderProps
          ? antdConfigProviderProps.sizeUnit!
          : 4
      }
      themeStyles={
        antdConfigProviderProps && "themeStyles" in antdConfigProviderProps
          ? antdConfigProviderProps.themeStyles!
          : true
          ? {
              fontFamily: "Vazirmatn",
              fontSize: "14px",
              fontWeight: "400",
              lineHeight: "1.5",
              color: "#000000",
              letterSpacing: "normal"
            }
          : undefined
      }
      wireframe={
        antdConfigProviderProps && "wireframe" in antdConfigProviderProps
          ? antdConfigProviderProps.wireframe!
          : false
      }
    >
      <SanityCredentialsProvider
        {...sanityCredentialsProviderProps}
        apiVersion={
          sanityCredentialsProviderProps &&
          "apiVersion" in sanityCredentialsProviderProps
            ? sanityCredentialsProviderProps.apiVersion!
            : undefined
        }
        dataset={
          sanityCredentialsProviderProps &&
          "dataset" in sanityCredentialsProviderProps
            ? sanityCredentialsProviderProps.dataset!
            : "production"
        }
        projectId={
          sanityCredentialsProviderProps &&
          "projectId" in sanityCredentialsProviderProps
            ? sanityCredentialsProviderProps.projectId!
            : "b2gfz67v"
        }
        token={
          sanityCredentialsProviderProps &&
          "token" in sanityCredentialsProviderProps
            ? sanityCredentialsProviderProps.token!
            : undefined
        }
        useCdn={
          sanityCredentialsProviderProps &&
          "useCdn" in sanityCredentialsProviderProps
            ? sanityCredentialsProviderProps.useCdn!
            : undefined
        }
      >
        <EmbedCss
          {...embedCssProps}
          css={
            embedCssProps && "css" in embedCssProps
              ? embedCssProps.css!
              : "*{\n    direction: rtl;\n}\n.sliderPage{\n    direction:initial !important;\n}\n.sliderPage *{\n    direction:initial !important;\n}\n\n.plasmic-slick-prev{\n    margin-left: 50px;\n    z-index: 2;\n}\n.plasmic-slick-next{\n    margin-right: 50px;\n    z-index: 2;\n}\n.slick-dots{\n    margin-bottom: 50px;\n    z-index: 2;\n}\n\n.sliderImg {\n    width: inherit;\n    height: inherit\n}\n.table *{\n    \n    text-align: center;\n}\n.collapse *{\n    direction: ltr !important;    \n}\n\n.ant-collapse-header{\n    align-items: center !important;\n}"
          }
        >
          {children}
        </EmbedCss>
      </SanityCredentialsProvider>
    </AntdConfigProvider>
  );
}
